TestNG uses:

testing framework for java programming language.

Run test case in a batch.
junit most popular for unit testing

people prefer testNG. Lot of features.
unit, functional, end-to-end, integration

used in developing framework.

1) execute test cases in a batch.
2) also can group test cases and run them alone.
3) excellent reports can be generated.
4) data driven testing from external source, excel, excel api etc.
5) Annotations 
6) good integration with maven
7) also integrate testNG with other tools like jenkins to schedule the test cases.
8) testng helps us in creating a framework

execute multiple tests from one file
modularize test cases based upon fucntionality and trigger them accordingly
controlling the flow-- running specific tests and ignoring the remaining.


http://beust.com/eclipse use this in add/install software from help menu to install testNG. For intellij idea TestNG is installed by default.
9) single file you can write multiple test cases.
10) by default testng execution are in  alphabetical order.

Basic testng format:

@Test
public void demo()
{
System.out.println("Sample test");
}
name of the function is the test case name.

Very important part in testng is testng xml file.
TestNG XML filee:

Structure:
Test Suite-->Test Folder(Module)-->test cases

It has the configuration to run which tests/.class files. We can create a list of test cases and run them alone. for eg. if a build is ready and deployed, we can run a smoke test cases suite and test that alone.

For this we need to create an XML file. and code the below.

<?xml version="1.0" encoding="UTF-8" ?>
<suite name ="Automation Test">
    <test name="Smoke Test">
        <classes>
           <class name ="TestNGFiles.annotations1" />
        </classes>
    </test>
</suite>

This is a sample which runs annoatation1 file.(package_name.class_name) Here we can include other classes as well to run the that particular test suite alone. We can run on package level and class level.
suppose you need to run test cases starting with certain alphabets then we can execute those tests alone.

eg <class name ="anno.*"

the above is really helpful when set of test cases need to be removed or executed.

Excluding a particular test from the class, so that remaining tests can be run.
<class name="test.day3">
<methods>
	<exclude name="tests_to_be_ignored"/>
</methods>
</class>

testng.xml file structure
<xml tag>
<suite>
	<test>
		<classes>
			<class>
				<methods>
					<exclude>-->this is used to exclude certain test cases
					<include>-->this is used to include certain test cases
					without include and exclude the xml will execute all the tests in the class.

sample code:
<exclude name="mobile.*"/>
this will remove all the tests that starts with mobile

We can even run the test cases from package level as well.

Common TestNG assertions:
assertEquals(actual,expected);
assertNotEquals(actual,expected);
assertTrue(Condition);
assertFalse(Condition);
assertNull(Object);
assertNotNull(object);